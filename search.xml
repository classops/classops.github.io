<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MavenCentral库发布记录</title>
      <link href="/2023/09/01/MavenCentral%E5%BA%93%E5%8F%91%E5%B8%83%E8%AE%B0%E5%BD%95/"/>
      <url>/2023/09/01/MavenCentral%E5%BA%93%E5%8F%91%E5%B8%83%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h2 id="MavenCentral库发布记录"><a href="#MavenCentral库发布记录" class="headerlink" title="MavenCentral库发布记录"></a>MavenCentral库发布记录</h2><h3 id="一、注册-Sonatype-账号，新建项目"><a href="#一、注册-Sonatype-账号，新建项目" class="headerlink" title="一、注册 Sonatype 账号，新建项目"></a>一、注册 Sonatype 账号，新建项目</h3><p><strong>注册</strong><br>https:&#x2F;&#x2F;​​issues.sonatype.org</p><p><strong>登录后，新建项目：</strong></p><p>相关选项，选择：</p><ul><li><strong>项目</strong>：Community Support - Open Source Project - Repository Hosting (OSSRH)  </li><li><strong>类型</strong>：New Project  </li><li><strong>概要</strong>：填写 Git 项目名即可  </li><li><strong>Group Id</strong>: Github项目，io.github.xxx 用户名  </li><li><strong>Project URL</strong>: 填写 github 项目主页  </li><li><strong>SCM url</strong>: 填 github项目地址 + .git</li></ul><p><img src="/images/sona1.png" alt="新建"><br><img src="/./images/sona2.png" alt="新建"></p><p><strong>点击提交后，等待 3-5分钟 回复，验证 github 所有权。</strong></p><ul><li>在自己项目里，在 github 创建 回复的 仓库</li><li>创建完成后，回复评论，大概意思就是即可： 仓库已创建</li></ul><p><img src="/./images/sona3.png" alt="回复"></p><p><strong>等待5-10分钟后，验证成功</strong></p><p>这时候，就有上传到 sonatype nexus 仓库权限了</p><h3 id="二、准备-GPG-密钥"><a href="#二、准备-GPG-密钥" class="headerlink" title="二、准备 GPG 密钥"></a>二、准备 GPG 密钥</h3><p>GPG 来生成 密钥，安装 GPG<br>Windows下使用scoop安装：</p><pre><code>scoop install gpggpg --generate-keygpg --list-keys</code></pre><p>这里获取到pub公钥，</p><p><img src="/./images/GPG.png" alt="GPG"></p><p>创建完成，–list-keys 显示 pub 第二方 一串：<br>67E95C8F2931C822********************F7E9<br>后面用于 <strong>上传和验证 公钥</strong></p><p><strong>上传公钥</strong></p><pre><code>gpg --keyserver hkp://keyserver.ubuntu.com:11371 --send-keys 67E95C8F2931C822********************F7E9# 验证是否上传功能，后 8 位即可gpg --keyserver hkp://keyserver.ubuntu.com:11371 --recv-keys ****F7E9</code></pre><p><strong>导出密钥，后面签名用</strong></p><pre><code>gpg --export-secret-keys 67E95C8F2931C822********************F7E9 &gt; secret.gpg</code></pre><h3 id="三、Gradle项目配置"><a href="#三、Gradle项目配置" class="headerlink" title="三、Gradle项目配置"></a>三、Gradle项目配置</h3><p>本地发布和远程发布，需要 maven-publish 插件，<br>GPG为了签名，需要 signing 插件。项目模块 build.gradle 配置：</p><pre><code class="groovy">plugins &#123;    id &#39;maven-publish&#39;    id &#39;signing&#39;&#125;</code></pre><p>添加后，gradle 就多了 publish 任务：</p><p><img src="/./images/gradle-publish-task.png" alt="publish"></p><h4 id="配置发布"><a href="#配置发布" class="headerlink" title="配置发布"></a>配置发布</h4><p>添加maven-publish后，开始配置 publishing 代码块</p><pre><code class="groovy">// 配置发布后 groupId，默认 artifactId 是项目模块名group = &#39;org.example&#39;version = &#39;1.0&#39;task sourcesJar(type: Jar) &#123;    classifier = &#39;sources&#39;    from sourceSets.main.allSource&#125;task javadocJar(type: Jar) &#123;    classifier = &#39;javadoc&#39;    from javadoc.destinationDir&#125;publishing &#123;    publications &#123;        release(MavenPublication) &#123;            // 配置POM信息            pom &#123;                name = project.name                description = &#39;xxx&#39;                url = &#39;https://github.com/xxx/xxx&#39;                // 开源协议                licenses &#123;                    license &#123;                        name = &#39;The Apache License, Version 2.0&#39;                        url = &#39;http://www.apache.org/licenses/LICENSE-2.0.txt&#39;                    &#125;                &#125;                // 配置开发者信息                developers &#123;                    developer &#123;                        id = &#39;xxx&#39;                        name = &#39;xxx&#39;                        email = &#39;xxx@163.com&#39;                    &#125;                &#125;                // scm                scm &#123;                    connection = &#39;https://github.com/xxx/xxx.git&#39;                    developerConnection = &#39;https://github.com/xxx/xxx.git&#39;                    url = &#39;https://github.com/xxx/xxx&#39;                &#125;            &#125;            // 发布文档 JAR            artifact javadocJar            // 发布源码 JAR            artifact sourcesJar            from components.java        &#125;    &#125;    repositories &#123;        maven &#123;            url &quot;https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/&quot;            credentials &#123;                                username project.sonaUsername // sonatype username                password project.sonaPassword // sonatype password            &#125;        &#125;    &#125;&#125;signing &#123;    sign publishing.publications.release&#125;</code></pre><h4 id="配置-sonatype-账号-和-GPG密钥"><a href="#配置-sonatype-账号-和-GPG密钥" class="headerlink" title="配置 sonatype 账号 和 GPG密钥"></a>配置 sonatype 账号 和 GPG密钥</h4><p>上面配置，还不能直接使用，在 gradle.properties 配置用到的 变量：</p><p>对于密码信息，可以放到 用户目录下的 gradle.properties，<br>Windows下是：</p><pre><code>C:\Users\用户名\.gradle\gradle.properties</code></pre><p>添加 账号信息：</p><pre><code class="properties"># sonatype 账号信息sonaUsername=xxxxsonaPassword=xxxx# GPG Signing Infosigning.keyId=XXXXXXXXsigning.password=xxxxxx# 上面导出的 GPG 密钥路径signing.secretKeyRingFile=C:\\Users\\username\\.gpg\\secret.gpg</code></pre><h3 id="四、发布到仓库"><a href="#四、发布到仓库" class="headerlink" title="四、发布到仓库"></a>四、发布到仓库</h3><p>项目下执行命令进行发布：</p><pre><code class="bat">.\gradlew.bat publish</code></pre><p>发布成功后，进入 snoatype nexus 后台，管理发布：<br><a href="https://s01.oss.sonatype.org/#stagingRepositories">https://s01.oss.sonatype.org/#stagingRepositories</a></p><ol><li>在 Staging Repositories，勾选发布的仓库，点击Close并确定</li><li>稍等几分钟，验证通过，点 Release</li><li>10-30分钟后，会在 Maven Central 同步更新</li></ol><ul><li>可在 <a href="https://mvnrepository.com/">https://mvnrepository.com/</a> 搜索查看库</li></ul><h3 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h3><ul><li>Android 发布: <a href="https://developer.android.com/build/publish-library/upload-library">https://developer.android.com/build/publish-library/upload-library</a></li><li><a href="https://blog.51cto.com/u_12853553/5896541">https://blog.51cto.com/u_12853553/5896541</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
